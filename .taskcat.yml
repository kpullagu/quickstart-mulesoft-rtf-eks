project:
  name: quickstart-mulesoft-rtf-eks
  owner: kpullagu@amazon.com
  regions:
  - us-east-1
  # - eu-north-1
  # - me-south-1
  # - us-east-2
  # - us-west-2
  template: templates/mulesoft-rtf-new-vpc.template.yaml
  parameters:
    RemoteAccessCIDR: 0.0.0.0/0
    # QSS3BucketName: $[taskcat_autobucket]
    QSS3BucketName: myquickstart-rtf
    QSS3KeyPrefix: quickstart-mulesoft-rtf-eks/
    QSS3BucketRegion: $[taskcat_current_region]
  lambda_source_path: functions/source
  lambda_zip_path: functions/packages
tests:
  defaults:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ProvisionBastionHost: Enabled
      EKSPublicAccessEndpoint: Disabled
  eks:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ProvisionBastionHost: Enabled
      EKSPublicAccessEndpoint: Disabled
      KeyPairName: --override--
      PrivateSubnet1CIDR: 10.0.0.0/19
      PrivateSubnet2CIDR: 10.0.32.0/19
      PrivateSubnet3CIDR: 10.0.64.0/19
      PublicSubnet1CIDR: 10.0.128.0/20
      PublicSubnet2CIDR: 10.0.144.0/20
      PublicSubnet3CIDR: 10.0.160.0/20
      ALBIngressController: Enabled
      AdditionalEKSAdminUserArn:
      AdditionalEKSAdminRoleArn:
      ClusterAutoScaler: Disabled
      ConfigSetName:
      EKSClusterName: mule-eks-rtf
      EfsStorageClass: Disabled
      FargateLabels:
      FargateNamespaces:
      MaxNumberOfNodes: 3
      MuleSoftAccountID:
      MuelSoftRtfClusterName:
      MuleSoftLicense:
      MuelSoftPassword:
      MuleSoftUsername:
      NodeGroupOS: 'Amazon Linux 2'
      NodeGroupType: Managed
      NodeInstanceFamily: Standard
      NodeInstanceType: t3.medium
      NumberOfAZs: 3
      NumberOfNodes: 3
      PerAccountSharedResources: AutoDetect
      PerRegionSharedResources: AutoDetect
      VPCCIDR: 10.0.0.0/16
#      MonitoringStack:
      TestSuite: Disabled
  public-endpoint:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      EKSPublicAccessEndpoint: Disabled
      ProvisionBastionHost: Enabled
    regions:
      - ap-northeast-2
  cluster-autoscaler:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Enabled
      ProvisionBastionHost: Enabled
      EKSPublicAccessEndpoint: Disabled
    regions:
    - eu-central-1
  efs:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      EfsStorageClass: Enabled
      ClusterAutoScaler: Disabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      EKSPublicAccessEndpoint: Disabled
      ProvisionBastionHost: Enabled
    regions:
    - us-west-2
  efs-prov:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      EfsStorageClass: Enabled
      ClusterAutoScaler: Disabled
      EfsThroughputMode: provisioned
      EfsProvisionedThroughputInMibps: 100
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ap-east-1
  managed-node-group:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Disabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ap-south-1
  monitoring-prom-graf:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      MonitoringStack: Prometheus + Grafana
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ap-southeast-2
    - us-west-2
  2az:
    parameters:
      AvailabilityZones: $[taskcat_genaz_2]
      NumberOfAZs: "2"
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - ca-central-1
    - cn-north-1
    - cn-northwest-1
  no-logging:
    parameters:
      AvailabilityZones: $[taskcat_genaz_2]
      NumberOfAZs: "2"
      EKSClusterLoggingTypes: ""
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - eu-west-1
  with-hybrid:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Disabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      MangedNodeGroupLabel: TestMNG
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - us-west-2
  alb-ingress:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ALBIngressController: Enabled
      EKSPublicAccessEndpoint: Disabled
      ProvisionBastionHost: Enabled
    regions:
    - us-east-2
  fargate:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Enabled
      FargateNamespaces: kube-system
      FargateLabels: 'app.kubernetes.io/name=aws-cluster-autoscaler'
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
    regions:
    - us-east-1
  enable-oidc:
    regions:
      - eu-west-2
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      IamOidcProvider: Enabled
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Disabled
  # snyk:
  #   regions:
  #     - eu-west-3
  #   parameters:
  #     AvailabilityZones: $[taskcat_genaz_3]
  #     ProvisionBastionHost: Disabled
  #     EKSPublicAccessEndpoint: Enabled
  #     SnykIntegration: Enabled
  #     SnykIntegrationId: ---overridden---
  # new-relic:
  #   regions:
  #     - sa-east-1
  #   parameters:
  #     AvailabilityZones: $[taskcat_genaz_3]
  #     ProvisionBastionHost: Disabled
  #     EKSPublicAccessEndpoint: Enabled
  #     NewRelicIntegration: Enabled
  #     NewRelicLicenseKey: ---overridden---
  managed-node-group-ASC:
    parameters:
      AvailabilityZones: $[taskcat_genaz_3]
      ClusterAutoScaler: Enabled
      ManagedNodeGroup: 'yes'
      ManagedNodeGroupAMIType: AL2_x86_64
      EKSPublicAccessEndpoint: Enabled
      ProvisionBastionHost: Enabled
    regions:
    - ap-south-1
